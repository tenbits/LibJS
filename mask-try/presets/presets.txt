====
title:
Simple
----
mask:
div.simple style="background:#6BA43C; color:#1E5043;" > "#{text}"
----
model:
{
    text: "Hello, World!"
}
----
====
title:
Collapsible
----
mask:
collapsible.classA {
    button.header > 'Toggle'
    .content {
        'Some Content, #{name}!'
    }
}
----
javascript:
/** create custom Control: */
mask.registerHandler('collapsible', Class({
    Base: Compo,
    Construct: function() {
        this.tagName = 'div';

        this.compos = {
            container: '$: .content'
        }
    },
    events: {
       'click: .header': function(e){
            this.compos.container.toggle();
       }
    }
}));

----
model:
{
    name: 'World'
}
----
style:
.classA {
    display:inline-block;
    background-color: rgb(150,240,150);
}
.header{
    cursor: pointer;
    padding: 10px;
    margin: 5px;
    font-weight: bold;
}
----
====
title:
Binding
----
mask:
table {
    tr {
        td > input type='text' {
                :dualbind value='name' changeEvent='keyup'{
                    :validate maxLength='10' message='MaxLength - 10';
                    :validate minLength='2' message='MinLength - 2';
                    :validate match='^([\w]+)$' message='Only characters';
                }
            }
        td > div > '#{bind:name}';
    }
    tr {
        td > textarea {
            :dualbind value='paths' bindingProvider='pathsProvider';
        }
        td {
            '[' span > :bind value='paths'; ']'
        }
    }

    tr {
        td > datePicker {
                :dualbind value='date' getter='getDate' setter='setDate';                
            }
        td > div > :bind value='date';
    }

    tr {
        td > input type='text' {
                :dualbind value='height' {
                    :validate match='^([\d]+)$' message='Only digits';
                    :validate check='<10' message='Min Height is 10px';
                    :validate check='>500' message='Max Height is 500px';
                }
            }
        td > div style='background:red;'> :dualbind value='height' bindingProvider='heightBinder';
    }

    h5 > 'Hello #{bind:name}!'
    customTag > button x-on='click: onclick' > 'Click';
}
----
javascript:

mask.registerBinding('pathsProvider', {     
    domWay: {
        get: function(provider){
            return provider.element.value.split('\n');
        },
        set: function(provider, value){
            provider.element.value = value.join('\n');
        }
    }
});

mask.registerBinding("heightBinder", {
    domWay: {
        set: function(provider,value){
            provider.element.style.height = value + 'px';
        }
    }
});

mask.registerBinding("datePickerProvider", {        
    domWay: {
        get: function(provider){
            return provider.node.parent.getDate();
        },
        set: function(provider, value){
            provider.node.parent.setDate(new Date(value));
        }
    }
});

mask.registerHandler('customTag',Class({
    Base: Compo,
    onclick: function(){
        alert('Button Clicked');
    }
}));

----
model:
{
    name: 'Alex',
    paths: ['path1.html','path2.html'],
    date: new Date,
    height:10
}
-----