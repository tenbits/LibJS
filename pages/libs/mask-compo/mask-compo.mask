layout:view master='view' {


    @content #title {
        a href='https://github.com/tenbits/mask-compo' target=_blank > 'github@Mask.Compo'
    }
    
    @content #side-menu {
        
        :radio .group name='api' selector='.side-menu-item' style='top: 20px' {
            h5 > 'Ṗroperties'
            .side-menu-item name='template' > 'template'
            .side-menu-item name='tagName' > 'tagName'
            .side-menu-item name='attr' > 'attr'
            .side-menu-item name='events' > 'events'
            .side-menu-item name='slots' > 'slots'
            .side-menu-item name='pipes' > 'pipes'
            .side-menu-item name='compos' > 'compos'
            .side-menu-item name='$' > '$'
        
            h5 > 'Ċonstructor (Abstract)'
            .side-menu-item name='Construct' > 'constructor'
            
            h5 > 'Ḟunctions (Abstract)'
            .side-menu-item name='onRenderStart' > 'onRenderStart'
            .side-menu-item name='render' > 'render'
            .side-menu-item name='onRenderEnd' > 'onRenderEnd'
            

            h5 > 'Ḟunctions (Methods)'
            .side-menu-item name='append' > 'append'
            .side-menu-item name='on' > 'on'
            .side-menu-item name='remove' > 'remove'
            .side-menu-item name='this.find' > 'find'
            .side-menu-item name='this.closest' > 'closest'
            .side-menu-item name='slotState' > 'slotState'
            .side-menu-item name='signalState' > 'signalState'
            .side-menu-item name='emitIn' > 'emitIn'
            .side-menu-item name='emitOut' > 'emitOut'

            
            h5 > 'Ḟunctions (Ṡtatic)'
            .side-menu-item name='find' > 'find'
            .side-menu-item name='closest' > 'closest'
            .side-menu-item name='config.setDOMLibrary' > 'config.setDOMLibrary'
            .side-menu-item name='initialize' > 'initialize'
            
            .side-menu-item name='dispose' > 'dispose'
            .side-menu-item name='Compo.pipe' > 'pipe'
            
            
        }
        
        :radio .group name='example' selector='.side-menu-item' {
            
            .side-menu-item name='radioButtons' > 'Radio Buttons'
            .side-menu-item name='prism' > 'Prism'
        }
        
    }

    @content #content {
        .container.tabPanel {
            div.info.active {
                h4 > 'Helps to create Custom Component Controllers'

                ul {
                    li { 'Enhance power of MaskJS' .hint > code > '... is build on top of Custom Control Feature' }
                    li { 'Write Once — Use anytime and everywhere' .hint > code > '... without additional Javascript!' }
                    li > 'Model-View-‹Component› (‹Controller/Presenter/ModelView/Adapter›)'
                    li > 'Signal - Slot'
                    li > 'Signal - Pipe'
                    li { 'Dry & Highly Customizable' }
                }
                
                p > a href='/mask-try/#preset:TODO' > 'TODO sample'

                .hint {
                    'Compo is already part of a default MaskJS Build, access it in '
                    code > 'mask.Compo'
                }


                'Dependencies:'
                ul {
                    li {
                        code > 'Any Dom Manipulation Library'
                        div.hint > code > 'We Recommend Zepto.js for Mobile Applications'
                    }
                }

            }
            div.api {
              
                :tabs #api anchors >
                    @panels >
                        prism src='/api.help/compo.api.js';
            }

            .example {
 
                :tabs #example > @panels {
                
                    div name='radioButtons' {
                        h3 > 'RadioButtons Implementation'
        
                        prism src='/api.help/radioButtons.source.js';
        
                        'As the result, we can just write in our mask markup:'
        
                        prism > formatter:pre > "
                            :radioButtons {
                                button.active > 'Info'
                                button > 'API'
                                button > 'Example'
                            }"
        
                        'We need no more javascript to apply mouse events, everything is done under the hood.'
        
                        div {
                            div > 'Listen to radiobuttons change from parent component:'
                            prism > formatter:pre {
                                ''|
                                Compo({
                                    events: {
                                        'changed: .radioButtons': function(sender){
                                            // do smth
                                        }
                                    }
                                });
        
                                |''
                            }
                        }
        
                        'So developed once radioButton Handler, we can use it everywhere in our project'
                    }
    
                    div name='prism' {
                        h3 >  'PrismJS Wrapper'
                        p > 'MaskJS plays perfect with other libraries'
        
                        'As an example, all sources on this site is highlighted with ' a href='http://prismjs.com/' > 'PrismJS'
        
                        prism > "var a = 10;" 'is'
                        prism > ':prism > "var a = 10;"'
        
                        div > 'No more javascript for highlighting - render mask markup anytime and insert into DOM'
        
                        div > 'The source code of a Prism Control Handler is:'
                        prism src='/api.help/prism.source.js';
                    }
                }

 
            }

            div.visual style='text-align: center'{
                img src='images/graph/compo.png' height='706px' width='523';
            }
        }
    }

    @content #tabs {
        radioButtons{
            button.active name='info' > 'Info'
            button name='api' > 'API'
            button name='example' > 'Example'
            button name='visual' > 'Visualization'
        }
    }
}
