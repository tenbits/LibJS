layout:view master='view' {


    @content #title {
        a href='https://github.com/tenbits/mask-compo' target=_blank > 'github@Mask.Compo'
    }

    @content #content {
        .container.tabPanel {
            div.info.active {
                h4 > 'Helps to create Custom Component Controllers'

                ul {
                    li { 'Enhance power of MaskJS' .hint > code > '... is build on top of Custom Control Feature' }
                    li { 'Write Once — Use anytime and everywhere' .hint > code > '... without additional Javascript!' }
                    li > 'Model-View-‹Component› (‹Controller/Presenter/ModelView/Adapter›)'
                    li > 'Signal - Slot'
                    li > 'Signal - Pipe'
                    li { 'Dry & Highly Customizable' }
                }
                
                p > a href='/mask-try/#preset:TODO' > 'TODO sample'

                .hint {
                    'Compo is already part of a default MaskJS Build, access it in '
                    code > 'mask.Compo'
                }


                'Dependencies:'
                ul {
                    li {
                        code > 'Any Dom Manipulation Library'
                        div.hint > code > 'We Recommend Zepto.js for Mobile Applications'
                    }
                }

            }
            div.api {
                h4 > 'Ṗroperties'
                ul.anchors {
                    li > a href='#/mask-compo/api/slots' > '.slots'
                    li > a href='#/mask-compo/api/events' > '.events'
                    li > a href='#/mask-compo/api/compos' > '.compos'
                    li > a href='#/mask-compo/api/$' > '.$'
                }
                h4 > 'Ċonstructor (Abstract Constructor)'
                ul.anchors {
                    li > a href='#/mask-compo/api/Construct' > 'constructor()'
                }
                h4 > 'Ḟunctions (Abstract Methods)'
                ul.anchors {
                    li > a href='#/mask-compo/api/onRenderStart' > '.onRenderStart(model, cntx, container)'
                    li > a href='#/mask-compo/api/render' > '.render(model, cntx, container)'
                    li > a href='#/mask-compo/api/onRenderEnd' > '.onRenderEnd(elements, model, cntx, container)'
                }

                h4 > 'Ḟunctions (Methods)'
                ul.anchors {
                    li > a href='#/mask-compo/api/append' > '.append(template, model)'
                    li > a href='#/mask-compo/api/on' > '.on(?type, selector, callback)'
                    li > a href='#/mask-compo/api/remove' > '.remove()'
                    li > a href='#/mask-compo/api/this.find' > '.find(selector)'
                    li > a href='#/mask-compo/api/this.closest' > '.closest(selector)'
                    li > a href='#/mask-compo/api/slotState' > '.slotState(slotName, isActive)'
                    li > a href='#/mask-compo/api/signalState' > '.signalState(signalName, isActive)'
                    li > a href='#/mask-compo/api/emitIn' > '.emitIn(signalName, event, args)'
                    li > a href='#/mask-compo/api/emitOut' > '.emitOut(signalName, event, args)'

                }
                h4 > 'Ḟunctions (Ṡtatic)'
                ul.anchors {
                    li > a href='#/mask-compo/api/find' > '.find(component, selector)'
                    li > a href='#/mask-compo/api/closest' > '.closest(component, selector)'
                    li > a href='#/mask-compo/api/dispose' > '.dispose(component)'
                    li > a href='#/mask-compo/api/config.setDOMLibrary' > '.config.setDOMLibrary(lib)'
                }

                prism src='/api.help/compo.api.js';
            }

            .example {

                ul.anchors {
                    li > a href='#/mask-compo/example/radioButtons' > 'Radio Buttons'
                    li > a href='#/mask-compo/example/prismjs' > 'PrismJS'
                    li > a href='#/mask-compo/example/complex' > 'Complex Example'
                }

                hr;
                h3 > a name='radioButtons' > 'RadioButtons Implementation'

                prism src='/api.help/radioButtons.source.js';

                'As the result, we can just write in our mask markup:'

                prism > formatter:pre > "
                    :radioButtons {
                        button.active > 'Info'
                        button > 'API'
                        button > 'Example'
                    }"

                'We need no more javascript to apply mouse events, everything is done under the hood.'

                div {
                    div > 'Listen to radiobuttons change from parent component:'
                    prism > formatter:pre {
                        ''|
                        Compo({
                            events: {
                                'changed: .radioButtons': function(sender){
                                    // do smth
                                }
                            }
                        });

                        |''
                    }
                }

                'So developed once radioButton Handler, we can use it everywhere in our project'

                hr;
                h3 > a name='prismjs' > 'PrismJS Wrapper'
                p > 'MaskJS plays perfect with other libraries'

                'As an example, all sources on this site is highlighted with ' a href='http://prismjs.com/' > 'PrismJS'

                prism > "var a = 10;" 'is'
                prism > ':prism > "var a = 10;"'

                div > 'No more javascript for highlighting - render mask markup anytime and insert into DOM'

                div > 'The source code of a Prism Control Handler is:'
                prism src='/api.help/prism.source.js';


                hr;
                h4 > a name='complex' > 'Another big example is the source code of this page, or current View'

                div > a href='pages/libs/mask-compo/mask-compo.mask' target='_blank' > 'Current Mask'
            }

            div.visual style='text-align: center'{
                img src='images/graph/compo.png' height='706px' width='523';
            }
        }
    }

    @content #tabs {
        radioButtons{
            button.active name='info' > 'Info'
            button name='api' > 'API'
            button name='example' > 'Example'
            button name='visual' > 'Visualization'
        }
    }
}
