====
title:
Simple
----
template:
div style='
    background:rgb(61, 155, 68);
    color: LightGreen ;
    ' >
        '~[text]'
----
javascript:
var model = { text: "Hello, World!" };
mask.render(template, model);
----
====
title:
Lists
----
template:
h4 > 'Flowers:'
% each='flowers' > div style='display:inline-block;' {
    img src='~[url]';
    div style='text-align:center;' > '~[name]'
}
----
javascript:
var model = {
    flowers: [{
        url: 'images/flowers/Lilie.png', name: 'Lily'
    }, {
        url: 'images/flowers/Nelke.png', name: 'Clove'
    }, {
        url: 'images/flowers/Rose.png', name: 'Rose'
    }]
};
mask.render(template, model);
----
====
title:
Component
----
template:
h4 > 'Should we repeat?' flowers;
----
javascript:
/** create custom Control: */
mask.registerHandler('flowers', Compo({
    constructor: function(){
        this.model = [{
            url: 'images/flowers/Lilie.png', name: 'Lily'
        }, {
            url: 'images/flowers/Nelke.png', name: 'Clove'
        }, {
            url: 'images/flowers/Rose.png', name: 'Rose'
        }];
    },
    renderStart: function(model, cntx, container){
        this.nodes = jmask("div > % each='.'");

        this.nodes
        .find('%')
        .append('div')
        .children()
        .css('display', 'inline-block')
        .append('img src="~[url]"')
        .append('div > "~[name]"')
        .children('div')
        .css('text-align','center');

    }
}));

mask.render(template);
----
====
title:
Bindings
----
template:
h4 > "~[bind:counter]";
----
javascript:
var json = { counter: 0 };
window.interval = setInterval(function(){ json.counter++; },2000);
mask.render("h3 > '~[bind:counter]'", json);
----
====
title:
Custom Value Handler
----
template:
p > '~[L:greeting] (lang: ~[current])'
----
javascript:
var dictionary = {
    en : { greeting: "Hello" },
    de : { greeting: "Hallo" },
    ru : { greeting: "Привет" }
}
var lang = navigator.language || "ru-ru";
    lang = lang.substring(0, lang.indexOf('-')).toLowerCase();
if (lang in dictionary === false) lang = "ru";
mask.registerUtility("L", function(key, values){
    return dictionary[lang][key];
});
mask.render(template,{current: lang});
----
