
header {
    'IncludeJS'
    a.github-ribbon href='https://github.com/tenbits/IncludeJS';
}

scroller.content {
    p.tabPanel{
        div.info.active {
            div {            
                ul {
                    li { 
                        'Resource Loader' 
                        div.hint > 'Javascript, Style, HTML, Ajax, Image' 
                        div.hint > 'Javascript can be loaded using XMLHttpRequest with eval() and also by embedding script tags with "src=%path%" attribute'
                    }
                    li { 'Inline Declaration' div.hint > code > 'No external files (such as "package.json")' }
                    li { 
                        'Routing'
                        prism > 'include.routes({ lib: "/src/myLib/{0}.js" }); /*...*/ include.js({ lib:"myScript"})'
                    }
                    li {
                        'Parameterized Include'
                        prism > 'include.js({compo: "myComponent?color=white"})'
                        'And myComponent.js could be as such:'
                        prism > 'document.body.style.backgroundColor = include.iparams.color'
                    }
                    li {
                        'Module Exports. Example: myScript.js'
                        prism > 'include.exports = { someFunction: function(){ console.log("hey"); } }'
                    }
                    li { 
                        'Javascript Aliases'
                        prism > 'include.js("myScript.js::MyObj").done(function(resp){ resp.MyObj.someFunction(); })'
                        'or without alias'
                        prism > 'include.js("myScript.js").done(function(resp){ resp.myScript.someFunction(); })'
                    }                    
                    li { 'Builder' div.hint > code > 'Combine all resources in one .JS | .CSS | .HTML file.' }
                    li { 'Callbacks' div.hint > code > 'Sub- and ResourceLoaded and DOMContentLoaded' }
                    li { 'Lazy Modules' div.hint > code > 'Parse(eval) Scripts only when they are needed' }
                    li { 'Performance ' div.hint > code > 'We use it for Mobile Development mainly' }
                    li { 'Size ' div.hint > code > 'Uglified only 8.6KB' }                
                    li > 'Also can be used in NodeJS environment'
                }
                'No Dependencies'
            }
        }
        div.api {
            ul.anchors {
                li > a href='#/include/api/js' > '.js(package)'
                li > a href='#/include/api/css' > '.css(package)'
                li > a href='#/include/api/load' > '.load(package)'
                li > a href='#/include/api/ajax' > '.ajax(package)'
                li > a href='#/include/api/embed' > '.embed(package)'
                li > a href='#/include/api/lazy' > '.lazy(package)'
                li > a href='#/include/api/wait' > '.wait()'
                li > a href='#/include/api/done' > '.done(fn)'
                li > a href='#/include/api/ready' > '.ready(fn)'
                li > a href='#/include/api/cfg' > '.cfg(routes)'
            }
            prism src='/api.help/include.help.js';   
        }
    }
}

footer {
    radioButtons{
        button.active name='info' > 'Info'
        button name='api' > 'Api'        
    }
}