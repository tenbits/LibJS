====
title:
Simple
----
template:
div.simple style="background:#6BA43C; color:#1E5043;" > "#{text}"
----
javascript:
var x = {text: "Hello, World!"};
mask.renderDom(template, x);
----
====
title:
Lists
----
template:
h4 > 'Flowers:'
list value='flowers' > div style='display:inline-block;' {
    img src='#{url}';
    div style='text-align:center;' > '#{name}'
}
----
javascript:
var x = {
    flowers: [{
        url: 'images/flowers/Lilie.png', name: 'Lily'
    }, {
        url: 'images/flowers/Nelke.png', name: 'Clove'
    }, {
        url: 'images/flowers/Rose.png', name: 'Rose'
    }]
};
mask.renderDom(template, x);
----
====
title:
Custom Control
----
template:
h4 > 'Should we repeat?' flowers;
----
javascript:
/** create custom Control: */
var Flowers = function() {
    this.flowers = [{
        url: 'images/flowers/Lilie.png', name: 'Lily'
    }, {
        url: 'images/flowers/Nelke.png', name: 'Clove'
    }, {
        url: 'images/flowers/Rose.png', name: 'Rose'
    }]
}
Flowers.prototype.render = function(values, container) {
    var div = document.createElement('div'),
        arr = this.flowers,
        html = [];
    for (var i = 0; i < arr.length; i++) {
        html.push('<div style="display:inline-block;"><img src="');
        html.push(arr[i].url);
        html.push('"/><div style="text-align: center;">');
        html.push(arr[i].name);
        html.push('</div></div>');
    }
    div.innerHTML = html.join('');
    container.appendChild(div);    
}
mask.registerHandler('flowers', Flowers);
mask.renderDom(template,{});
----
====
title:
Bindings
----
template:
h4 > bind value='counter';
----
javascript:
var json = { counter: 0 };
window.interval = setInterval(function(){ json.counter++; },2000);
mask.renderDom("h3 > bind value='counter';", json);
----
====
title:
Custom Value Handler
----
template:
p > '#{L:greeting} (lang: #{current})'
----
javascript:
var dictionary = {
    en : { greeting: "Hello" },
    de : { greeting: "Hallo" },
    ru : { greeting: "Привет" }
}
var lang = navigator.language || "ru-ru";
    lang = lang.substring(0, lang.indexOf('-')).toLowerCase();
if (lang in dictionary === false) lang = "ru";
mask.registerUtility("L", function(key, values){
    return dictionary[lang][key];
});
mask.renderDom(template,{current: lang});
----