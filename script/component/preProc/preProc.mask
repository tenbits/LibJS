
header {
    'Pre Processors'
    a.github-ribbon href='https://github.com/tenbits/Compos';
}

layout:master#apiItem {
    div {
        hr;
        h4 > code > placeholder#title;
        p.description > small{
            placeholder#description;
        }
        'Include:'
        p.include > placeholder#include;
        
        div.api > ul > placeholder#attributes;
        'Example:'
        p.example > placeholder#example;
        
    }
}


scroller.content {
    div.container.tabPanel {
        p.api.active {
            
            layout:view master='apiItem' {                
                title > 'layout'
                description { '
                    Do you familier with Master-Pages in ASP.NET? 
                    And thats it for MaskJS. There are 2 types of layout '                    
                    tt > b > 'layout:master;' ' and ' tt > b > 'layout:view;'
                }
                include {
                    prism > "'{libjs}/compos/layout/lib/layout.js'"
                    'or'
                    prism > "include.js({compo: 'layout' })"
                }
                example {
                    div > 'Define Master Template'
                    pre > code > formatter:pre > "
                        layout:master#myID { \n
                            \t header > 'Hello' \n
                            \t ul > li > placeholder#contentID \n
                            \t div > placeholder#footer \n
                        }
                    "
                    div > 'Define Content Template'
                    pre > code > formatter:pre > "
                        layout:view master='myID'{ \n
                            \t contentID > /** any mask content */ \n
                            \t footer { /** any mask content */ }\n
                        }
                    "
                    
                }               
            }
            
            layout:view master='apiItem' {
                title > 'template;'
                description > 'Child nodes will be not rendered. But it is component, so you can resolve template nodes, @see also list; component.'
                include {
                    prism > "'{libjs}/compos/utils/lib/utils.js'"
                }
                example {
                    prism > "div.container; template#externalTemplate > div.fromTemplate > 'Hello'"
                    prism > formatter:pre > "
                    var c = new Compo(\"div.container; template#externalTemplate > div.fromTemplate > 'Hello'\")\n
                        \t.render()\n
                        \t.insert(document.body);\n
                    var template = c.findCompo('#externalTemplate').nodes;\n
                    var dom = mask.renderDom(template);\n
                    document.body.appendChild(dom)\n
                    "
                } 
            }
            
        }        
    }
}

footer {
    radioButtons{
        button.active name='api' > 'API'        
    }
}