header {
    'LibJS Project'
    div style='text-align:right; float:right;' > 'Tao 道 Application Framework'
}

scroller.content.container.about {
    p {
        h4 > 'Component Composition in HTML5 Application without Javascript'
        
        'You can — '
        ul {
            li > 'develop components seperate from main project'
            li > 'embed them into the project with all it resources (css, image, html, javascript)'
            li > 'initialize them direct in the markup - without addition javascript'
        }
        
        'And so the development starts to make fun!'
        
        div.hint {
            'As we believe in "Energy of the Universe", we tried not to desturb its streams with our code, '
            'and made it Simple, Beautiful and Harmonious'
        }
        h6 > 'LibJS Project consists of serveral libraries:'
        ul {
            li > 'ClassJS — yes, this is Class implementation'
            li > 'MaskJS — Dzen Coding Views'
            li > 'IncludeJS — More Powerfull, but yet easier Resource Loader'
            li > 'IncludeJS.Builder — Node.js tool for building Projects and combining Components'
            li > 'CompoJS — Model-View-‹Component›'        
        }
        div.hint > '∗ Optimized for  ￦ebKit Engine (mobile and desktop)'
        
        div {
            h6;
            'So, what does this mean — "without Javascript"?'
            ' As for example, lets look at jQuery widget initialization — '
            ol {
                li > code > 'Define placeholder or container in HTML markup'
                li > code > '"Somewhere" in code — $("#myCompo").initMyComponent(config)'
            }
            'It looks simple — only 2 lines. ' b > i > 'BUT' ', this 2 lines have also 2 Problems.'
            ol {
                li {
                    div > 'Tao'
                    div >'You seperate this two lines. (1) is in markup and (2) is "somewhere" in javascript file.'
                    div > 'Smth. must be defined only once - not twice.'
                }
                li {
                    div > 'Actual Performance'
                    div > '(2) line has performance issues - '
                    ul  {
                       li > 'additional DOM Quering'
                       li > 'additional DOM Reflow and Repaint, while rendering in that HTMLElement'
                    }
                }
            }
            
            'This Project aims to cut off this two problems and the third one — ' b > i > 'Source Code Organization'
            
            p {
                'What is jQuery Widget usually consists of? Right — javascript, css, images ...' br;
                'So to use this widget you have to copy images and scripts into project directory, copy css into applicaton styles.' br;
                'Compfortable? Defenetly no. With IncludeJS you "include" this all with only 1 line of code.'
            }
            
            'Interested? Look at the libraries and examples.'
            
        }
        
        h6;
    }
}
